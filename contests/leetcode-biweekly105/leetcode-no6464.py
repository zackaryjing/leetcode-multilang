from typing import *
from functools import cache
@cache
def gcd(a,b):
    while b != 0:
        a,b = b,a % b
    return a

print(gcd(2,6))
print(gcd(2,3))
print(gcd(6,3))
# print(gcd(7,3))
# print(gcd(8,4))
# print(gcd(46,13))
# print(gcd(256,64))
# print(gcd(64,256))


class Solution:
    def canTraverseAllPairs(self, nums: List[int]) -> bool:
        edges = []
        N = len(nums)
        for i in range(N):
            for j in range(i+1,N):
                if gcd(nums[i], nums[j]) > 1:
                    edges.append([i, j])

        parent = list(range(N + 1))

        def find(index: int) -> int:
            if parent[index] != index:
                parent[index] = find(parent[index])
            return parent[index]

        def union(index1: int, index2: int):
            parent[find(index1)] = find(index2)

        for node1, node2 in edges:
            if find(node1) != find(node2):
                union(node1, node2)

            # else:  # 此处的操作，在于返回冗余的连接
            #     print(parent)
            #     return [node1, node2]
        # print(parent)

        for i in range(N):
            for j in range(i,N):
                if find(i) != find(j):
                    # print(i,j)
                    return False
        return True


def isprime(num):
    k = int(num ** 0.5) + 1
    for i in range(2,k):
        if num % i == 0:
            return False
    return True
class Solution:
    def canTraverseAllPairs(self, nums: List[int]) -> bool:
        n = len(nums)
        if n == 1:
            return True
        nums = list(set(nums))
        nums.sort(reverse=True)
        N = len(nums)
        if N == 1 :
            if nums[0] == 1:
                return False
            else:
                return True
            
        parent = list(range(N + 1))
        
        def find(index: int) -> int:
            if parent[index] != index:
                parent[index] = find(parent[index])
            return parent[index]
        
        def union(index1: int, index2: int):
            parent[find(index1)] = find(index2)
        
        for i in range(N):
            for j in range(i + 1, N):
                if i == 0 and isprime(nums[j]) and nums[j] > (nums[0] // 2):
                    # print("throught this",nums[j])
                    return False
                
                if gcd(nums[i], nums[j]) > 1 and find(i) != find(j):
                    union(i, j)
        
        for i in range(N):
            for j in range(i + 1, N):
                if find(i) != find(j):
                    return False
        return True
# True
# True
# False
# True
# False
# True

t = Solution()
print(t.canTraverseAllPairs([1]))
print(t.canTraverseAllPairs([2]))
print(t.canTraverseAllPairs([1,1]))
print(t.canTraverseAllPairs([2,3,6]))
print(t.canTraverseAllPairs([3,9,5]))
print(t.canTraverseAllPairs([4,3,12,8]))
print(t.canTraverseAllPairs([100000,99999,99998,99997,99996,99995,99994,99993,99992,99991,99990,99989,99988,99987,99986,99985,99984,99983,99982,99981,99980,99979,99978,99977,99976,99975,99974,99973,99972,99971,99970,99969,99968,99967,99966,99965,99964,99963,99962,99961,99960,99959,99958,99957,99956,99955,99954,99953,99952,99951,99950,99949,99948,99947,99946,99945,99944,99943,99942,99941,99940,99939,99938,99937,99936,99935,99934,99933,99932,99931,99930,99929,99928,99927,99926,99925,99924,99923,99922,99921,99920,99919,99918,99917,99916,99915,99914,99913,99912,99911,99910,99909,99908,99907,99906,99905,99904,99903,99902,99901,99900,99899,99898,99897,99896,99895,99894,99893,99892,99891,99890,99889,99888,99887,99886,99885,99884,99883,99882,99881,99880,99879,99878,99877,99876,99875,99874,99873,99872,99871,99870,99869,99868,99867,99866,99865,99864,99863,99862,99861,99860,99859,99858,99857,99856,99855,99854,99853,99852,99851,99850,99849,99848,99847,99846,99845,99844,99843,99842,99841,99840,99839,99838,99837,99836,99835,99834,99833,99832,99831,99830,99829,99828,99827,99826,99825,99824,99823,99822,99821,99820,99819,99818,99817,99816,99815,99814,99813,99812,99811,99810,99809,99808,99807,99806,99805,99804,99803,99802,99801,99800,99799,99798,99797,99796,99795,99794,99793,99792,99791,99790,99789,99788,99787,99786,99785,99784,99783,99782,99781,99780,99779,99778,99777,99776,99775,99774,99773,99772,99771,99770,99769,99768,99767,99766,99765,99764,99763,99762,99761,99760,99759,99758,99757,99756,99755,99754,99753,99752,99751,99750,99749,99748,99747,99746,99745,99744,99743,99742,99741,99740,99739,99738,99737,99736,99735,99734,99733,99732,99731,99730,99729,99728,99727,99726,99725,99724,99723,99722,99721,99720,99719,99718,99717,99716,99715,99714,99713,99712,99711,99710,99709,99708,99707,99706,99705,99704,99703,99702,99701,99700,99699,99698,99697,99696,99695,99694,99693,99692,99691,99690,99689,99688,99687,99686,99685,99684,99683,99682,99681,99680,99679,99678,99677,99676,99675,99674,99673,99672,99671,99670,99669,99668,99667,99666,99665,99664,99663,99662,99661,99660,99659,99658,99657,99656,99655,99654,99653,99652,99651,99650,99649,99648,99647,99646,99645,99644,99643,99642,99641,99640,99639,99638,99637,99636,99635,99634,99633,99632,99631,99630,99629,99628,99627,99626,99625,99624,99623,99622,99621,99620,99619,99618,99617,99616,99615,99614,99613,99612,99611,99610,99609,99608,99607,99606,99605,99604,99603,99602,99601,99600,99599,99598,99597,99596,99595,99594,99593,99592,99591,99590,99589,99588,99587,99586,99585,99584,99583,99582,99581,99580,99579,99578,99577,99576,99575,99574,99573,99572,99571,99570,99569,99568,99567,99566,99565,99564,99563,99562,99561,99560,99559,99558,99557,99556,99555,99554,99553,99552,99551,99550,99549,99548,99547,99546,99545,99544,99543,99542,99541,99540,99539,99538,99537,99536,99535,99534,99533,99532,99531,99530,99529,99528,99527,99526,99525,99524,99523,99522,99521,99520,99519,99518,99517,99516,99515,99514,99513,99512,99511,99510,99509,99508,99507,99506,99505,99504,99503,99502,99501,99500,99499,99498,99497,99496,99495,99494,99493,99492,99491,99490,99489,99488,99487,99486,99485,99484,99483,99482,99481,99480,99479,99478,99477,99476,99475,99474,99473,99472,99471,99470,99469,99468,99467,99466,99465,99464,99463,99462,99461,99460,99459,99458,99457,99456,99455,99454,99453,99452,99451,99450,99449,99448,99447,99446,99445,99444,99443,99442,99441,99440,99439,99438,99437,99436,99435,99434,99433,99432,99431,99430,99429,99428,99427,99426,99425,99424,99423,99422,99421,99420,99419,99418,99417,99416,99415,99414,99413,99412,99411,99410,99409,99408,99407,99406,99405,99404,99403,99402,99401,99400,99399,99398,99397,99396,99395,99394,99393,99392,99391,99390,99389,99388,99387,99386,99385,99384,99383,99382,99381,99380,99379,99378,99377,99376,99375,99374,99373,99372,99371,99370,99369,99368,99367,99366,99365,99364,99363,99362,99361,99360,99359,99358,99357,99356,99355,99354,99353,99352,99351,99350,99349,99348,99347,99346,99345,99344,99343,99342,99341,99340,99339,99338,99337,99336,99335,99334,99333,99332,99331,99330,99329,99328,99327,99326,99325,99324,99323,99322,99321,99320,99319,99318,99317,99316,99315,99314,99313,99312,99311,99310,99309,99308,99307,99306,99305,99304,99303,99302,99301,99300,99299,99298,99297,99296,99295,99294,99293,99292,99291,99290,99289,99288,99287,99286,99285,99284,99283,99282,99281,99280,99279,99278,99277,99276,99275,99274,99273,99272,99271,99270,99269,99268,99267,99266,99265,99264,99263,99262,99261,99260,99259,99258,99257,99256,99255,99254,99253,99252,99251,99250,99249,99248,99247,99246,99245,99244,99243,99242,99241,99240,99239,99238,99237,99236,99235,99234,99233,99232,99231,99230,99229,99228,99227,99226,99225,99224,99223,99222,99221,99220,99219,99218,99217,99216,99215,99214,99213,99212,99211,99210,99209,99208,99207,99206,99205,99204,99203,99202,99201,99200,99199,99198,99197,99196,99195,99194,99193,99192,99191,99190,99189,99188,99187,99186,99185,99184,99183,99182,99181,99180,99179,99178,99177,99176,99175,99174,99173,99172,99171,99170,99169,99168,99167,99166,99165,99164,99163,99162,99161,99160,99159,99158,99157,99156,99155,99154,99153,99152,99151,99150,99149,99148,99147,99146,99145,99144,99143,99142,99141,99140,99139,99138,99137,99136,99135,99134,99133,99132,99131,99130,99129,99128,99127,99126,99125,99124,99123,99122,99121,99120,99119,99118,99117,99116,99115,99114,99113,99112,99111,99110,99109,99108,99107,99106,99105,99104,99103,99102,99101,99100,99099,99098,99097,99096,99095,99094,99093,99092,99091,99090,99089,99088,99087,99086,99085,99084,99083,99082,99081,99080,99079,99078,99077,99076,99075,99074,99073,99072,99071,99070,99069,99068,99067,99066,99065,99064,99063,99062,99061,99060,99059,99058,99057,99056,99055,99054,99053,99052,99051,99050,99049,99048,99047,99046,99045,99044,99043,99042,99041,99040,99039,99038,99037,99036,99035,99034,99033,99032,99031,99030,99029,99028,99027,99026,99025,99024,99023,99022,99021,99020,99019,99018,99017,99016,99015,99014,99013,99012,99011,99010,99009,99008,99007,99006,99005,99004,99003,99002,99001,99000,98999,98998,98997,98996,98995,98994,98993,98992,98991,98990,98989,98988,98987,98986,98985,98984,98983,98982,98981,98980,98979,98978,98977,98976,98975,98974,98973,98972,98971,98970,98969,98968,98967,98966,98965,98964,98963,98962,98961,98960,98959,98958,98957,98956,98955,98954,98953,98952,98951,98950,98949,98948,98947,98946,98945,98944,98943,98942,98941,98940,98939,98938,98937,98936,98935,98934,98933,98932,98931,98930,98929,98928,98927,98926,98925,98924,98923,98922,98921,98920,98919,98918,98917,98916,98915,98914,98913,98912,98911,98910,98909,98908,98907,98906,98905,98904,98903,98902,98901,98900,98899,98898,98897,98896,98895,98894,98893,98892,98891,98890,98889,98888,98887,98886,98885,98884,98883,98882,98881,98880,98879,98878,98877,98876,98875,98874,98873,98872,98871,98870,98869,98868,98867,98866,98865,98864,98863,98862,98861,98860,98859,98858,98857,98856,98855,98854,98853,98852,98851,98850,98849,98848,98847,98846,98845,98844,98843,98842,98841,98840,98839,98838,98837,98836,98835,98834,98833,98832,98831,98830,98829,98828,98827,98826,98825,98824,98823,98822,98821,98820,98819,98818,98817,98816,98815,98814,98813,98812,98811,98810,98809,98808,98807,98806,98805,98804,98803,98802,98801,98800,98799,98798,98797,98796,98795,98794,98793,98792,98791,98790,98789,98788,98787,98786,98785,98784,98783,98782,98781,98780,98779,98778,98777,98776,98775,98774,98773,98772,98771,98770,98769,98768,98767,98766,98765,98764,98763,98762,98761,98760,98759,98758,98757,98756,98755,98754,98753,98752,98751,98750,98749,98748,98747,98746,98745,98744,98743,98742,98741,98740,98739,98738,98737,98736,98735,98734,98733,98732,98731,98730,98729,98728,98727,98726,98725,98724,98723,98722,98721,98720,98719,98718,98717,98716,98715,98714,98713,98712,98711,98710,98709,98708,98707,98706,98705,98704,98703,98702,98701,98700,98699,98698,98697,98696,98695,98694,98693,98692,98691,98690,98689,98688,98687,98686,98685,98684,98683,98682,98681,98680,98679,98678,98677,98676,98675,98674,98673,98672,98671,98670,98669,98668,98667,98666,98665]))
