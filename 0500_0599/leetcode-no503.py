class Solution:
    def nextGreaterElements(self, nums: list[int]) -> list[int]:
        nums += nums
        stack = [0]
        n = len(nums)
        res = [-1] * n
        for i in range(n):
            while stack and nums[i] > nums[stack[-1]]:
                res[stack.pop()] = nums[i]
            stack.append(i)
        return res[:n//2]

t = Solution()
print(t.nextGreaterElements([1,8,-1,-100,-1,222,1111111,-111111]))












"""
[1,8,-1,-100,-1,222,1111111,-111111]
注意，出栈的同时，res[stack.pop(-1)] = nums[i]

i                          栈                              res 
0                         []                       [-1,-1,-1,-1,-1,-1,-1,-1]
1                        [0]                      [-1,-1,-1,-1,-1,-1,-1,-1]                  0出栈，1入栈
2                        [1]                      [8,-1,-1,-1,-1,-1,-1,-1]                   2入栈
3                       [1,2,3]                   [8,-1,-1,-1,-1,-1,-1,-1]                 3入栈
4                        [1,2,4]                     [8,-1,-1,-1,-1,-1,-1,-1]                   3出栈，4入栈
5                          [5]                       [8,-1,-1,-1,-1,-1,-1,-1]          1,2,4出栈，5入栈
6                         [6]                     [8,222,222,-1,222,-1,-1,-1]             5出栈，6入栈
7                    [6，7]                        [8,222,222,-1,222,1111111,-1,-1]             7入栈
8->0                   [6]                      [8,222,222,-1,222,1111111,-1,-1]                 7出栈
9->1                  [6]                         [8,222,222,-1,222,1111111,-1,1]                无变化
10->2                  [6]                         [8,222,222,-1,222,1111111,-1,1]                无变化
11->3                 [6]                         [8,222,222,-1,222,1111111,-1,1]                无变化
12->4                 [6]                         [8,222,222,-1,222,1111111,-1,1]                无变化
13->5                [6]                         [8,222,222,-1,222,1111111,-1,1]                无变化

"""
